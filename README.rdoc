= Redline

Author:: Thomas Sawyer
Licence:: Dual GPL v.3


== DESCRIPTION

Redline is a life-cycle based Ruby project mangement tool. Redline
provides a systematic methodology to help developers prepare
and release Ruby projects.


== RESOURCES

* Home Page: http://rubyworks.github.com/redline
* Development: http://github.com/rubyworks/redline
* Mailing List: http://googlegroups.com/group/rubyworks-mailinglist


== SYNOPSIS

Using Redline is not diffcult, but it does take a few minutes to understand
how it operates. If you are familiar with Maven from the Java ecosystem then
you have as fair notion of Redline. In short, Redline defines life-cycles
within which all Redline services run. You define serivce instances, or
tasks, as YAML configuration files in you projects +task+ directory with
a .red extension, eg. +box.red+, or in a central +Redfile+. For example,
Sycle's RubyForge service config looks like this:

  rubyforge:
    service: Rubyforge
    sitemap:
      site: <%= name %>
    active: true

Actually, this is not longer used becuase Redline moved to GitHub, but this
example is good one becuase it exemplifies how tasks are defined. These
service configs often draw on metadata about your project, as in the above
example's use of <tt><%= name %></tt>. Metadata is defined using POM
(see http://rubyworks.rubyforge.org/pom). Essentially, you add files to your
project's +meta+ directory or +Profile+ file, and the information becomes
available via Erb embedded tags.

With service configuration and metadata in place, using redline is simply
a matter of specifying the cycle and phase you wish to complete.

  $ redline main:document

The cycle name and its phase are separated by a colon. This command
would run every phase in the +main+ cycle, in order, until it completes
the +document+ phase. Since +main+ is the default cycle, we can acheive
the same effect without specifying it.

  $ redline document

The use of cycles may seem constrictive to users of tools like Rake,
but it helps ensure a project is always up-to-date and in-sync. Redline
includes three life-cycles out of the box. The most significant of
which is +main+ which entails a subcycle with ordred phases:

  prepare     # prepare services / ensure service requirements
  generate    # code generation
  compile     # compile source code
  test        # run tests and/or specifications
  analyize    # run code analysis
  document    # generate documentation
  package     # create packages
  verify      # post package verification (eg. integration tests)
  release     # release packages / deploy to servers?
  promote     # tell the world about you awesome work

It also has a clean subcycle, which is common to many life-cycles. It consits
of just two phases:

  reset       # mark build files as out-of-date
  clean       # remove build files

Where reset marks generated files out-of-date, and clean actually removes them.

In additon to +main+, Redline includes +site+ and +attn+ life-cycles which are used
to generate and publish a project website, and make project announcements
respectively. They are simply useful subsets of the +main+ cycle.

Please see http://rubyworks.github.com/redline for more details on how to
use Redline, including the creation of custom cycles, phases, and service plugins.
Also try the <tt>--help</tt> option to see the redline command's help
information.


== INSTALLATION

Redline can, of course, be installed via RubyGems:

  $ sudo gem install redline

We no longer recommend it, byt Redline can also be installed the
old-fashion way by downloading the .tar.gz package and using
Ruby Setup (See http://setup.rubyforge.org).

  $ tar -xvzf redline-1.0.0.tar.gz
  $ cd redline-1.0.0
  $ sudo setup.rb

Ruby Setup is stand-alone version of the original setup.rb script.


== ISSUES

All in all, Redline works well. There are some rough edges with regards
to the built-in service plugins, so from time to time you might run into
an odd error. Ususally it just mean a service confirguraiton needs 
adjustment.

Please note, Windows support has not been considered at all. While I do
not see any specific reason it should not work, there may well be issues
I have not considered since I do not use Windows. If you are Windows user
and give Redline a try please let us know of any issues you encounter.


== HISTORY

Redline is actaully the offspring of Reap v10, and represents
about four years worth of design consideration and reconsideration,
that brought Reap from a simple Rake extension to the life-cycle
system Redline is today.


== COPYRIGHT & LICENSE

Copyright (c) 2007 Thomas Sawyer

Unless otherwise permited by the author, Redline is distributed
under the terms of the GPL version 3 or above. See COPYING
for full license.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

