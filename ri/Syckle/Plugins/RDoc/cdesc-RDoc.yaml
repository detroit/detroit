--- !ruby/object:RDoc::RI::ClassDescription 
attributes: 
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Ad file html snippet to add to html rdocs.
  name: adfile
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Paths to specifically exclude.
  name: exclude
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Additional options passed to the rdoc command.
  name: extra
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Which files to document.
  name: files
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Main file. This can be a file pattern. (README{,.*})
  name: main
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Where to save rdoc files (doc/rdoc).
  name: output
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Template to use (defaults to ENV['RDOC_TEMPLATE'] or 'darkfish')
  name: template
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Title of documents. Defaults to general metadata title field.
  name: title
  rw: RW
class_methods: []

comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  body: RDoc documentation plugin generates RDocs for your project.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: By default it generates the rdoc documentaiton at doc/rdoc, unless an 'rdoc' directory exists in the project's root directory, in which case the rdoc documentation will be stored there.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "This plugin provides the following cycle-phases:"
- !ruby/struct:RDoc::Markup::Flow::VERB 
  body: "  main:document  - generate rdocs\n  main:reset     - mark rdocs out-of-date\n  main:clean     - remove rdocs\n\n  site:document  - generate rdocs\n  site:reset     - mark rdocs out-of-date\n  site:clean     - remove rdocs\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  body: RDoc service will be available automatically if the project has a <tt>doc/rdoc</tt> directory.
- !ruby/struct:RDoc::Markup::Flow::RULE 
  width: 
- !ruby/struct:RDoc::Markup::Flow::P 
  body: RDoc documentation plugin generates RDocs for your project.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: By default it generates the rdoc documentaiton at doc/rdoc, unless an 'rdoc' directory exists in the project's root directory, in which case the rdoc documentation will be stored there.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "This plugin provides the following cycle-phases:"
- !ruby/struct:RDoc::Markup::Flow::VERB 
  body: "  main:document  - generate rdocs\n  main:reset     - mark rdocs out-of-date\n  main:clean     - remove rdocs\n\n  site:document  - generate rdocs\n  site:reset     - mark rdocs out-of-date\n  site:clean     - remove rdocs\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  body: RDoc service will be available automatically if the project has a <tt>doc/rdoc</tt> directory.
- !ruby/struct:RDoc::Markup::Flow::RULE 
  width: 
- !ruby/struct:RDoc::Markup::Flow::P 
  body: RDoc documentation plugin generates RDocs for your project.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: By default it generates the rdoc documentaiton at doc/rdoc, unless an 'rdoc' directory exists in the project's root directory, in which case the rdoc documentation will be stored there.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "This plugin provides the following cycle-phases:"
- !ruby/struct:RDoc::Markup::Flow::VERB 
  body: "  main:document  - generate rdocs\n  main:reset     - mark rdocs out-of-date\n  main:clean     - remove rdocs\n\n  site:document  - generate rdocs\n  site:reset     - mark rdocs out-of-date\n  site:clean     - remove rdocs\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  body: RDoc service will be available automatically if the project has a <tt>doc/rdoc</tt> directory.
constants: 
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Deafult extra options to add to rdoc call.
  name: DEFAULT_EXTRA
  value: "''"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Default main file.
  name: DEFAULT_MAIN
  value: "\"README{,.*}\""
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Default location to store rdoc documentation files.
  name: DEFAULT_OUTPUT
  value: "\"doc/rdoc\""
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Locations to check for existance in deciding where to store rdoc documentation.
  name: DEFAULT_OUTPUT_MATCH
  value: "\"{doc/rdoc,rdoc}\""
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Default rdoc template to use.
  name: DEFAULT_TEMPLATE
  value: "\"darkfish\""
full_name: Syckle::Plugins::RDoc
includes: []

instance_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: clean
- !ruby/object:RDoc::RI::MethodSummary 
  name: document
- !ruby/object:RDoc::RI::MethodSummary 
  name: initialize_defaults
- !ruby/object:RDoc::RI::MethodSummary 
  name: main_document
- !ruby/object:RDoc::RI::MethodSummary 
  name: rdoc_insert_ads
- !ruby/object:RDoc::RI::MethodSummary 
  name: rdoc_target
- !ruby/object:RDoc::RI::MethodSummary 
  name: reset
name: RDoc
superclass: Service
