--- !ruby/object:RDoc::RI::ClassDescription 
attributes: 
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Files patterns to specially exclude from loadpath. Default is ['ext'] b/c this does not yet support C analysis.
  name: exclude
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Directories to scan for scripts. The default is the project's loadpath.
  name: loadpath
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Output directory. Default is stats/ folder under the project's log directory. This should alwasy be a dedicated directory because mutiple files are generated with generic names, eg. <tt>index.html</tt>.
  name: output
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Directories to scan for tests. The default is test/.
  name: testpath
  rw: RW
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Title of pacakge. Thisis used to put a header in the output.
  name: title
  rw: RW
class_methods: []

comment: 
- !ruby/struct:RDoc::Markup::Flow::H 
  level: 1
  text: Simple Code Statistics Plugin
- !ruby/struct:RDoc::Markup::Flow::P 
  body: The Stats plugin is a simple code statistics analyizer, producing a basic LOC analysis.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "TODO: Add support for testable demo/ (how?)."
- !ruby/struct:RDoc::Markup::Flow::RULE 
  width: 
- !ruby/struct:RDoc::Markup::Flow::H 
  level: 1
  text: Simple Code Statistics Plugin
- !ruby/struct:RDoc::Markup::Flow::P 
  body: The Stats plugin is a simple code statistics analyizer, producing a basic LOC analysis.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "TODO: Add support for testable demo/ (how?)."
- !ruby/struct:RDoc::Markup::Flow::RULE 
  width: 
- !ruby/struct:RDoc::Markup::Flow::H 
  level: 1
  text: Simple Code Statistics Plugin
- !ruby/struct:RDoc::Markup::Flow::P 
  body: The Stats plugin is a simple code statistics analyizer, producing a basic LOC analysis.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "TODO: Add support for testable demo/ (how?)."
constants: 
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Default folders and/or file patterns to exclude from analysis.
  name: DEFAULT_EXCLUDE
  value: "['ext']"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Default folder to store generated files under log/.
  name: DEFAULT_FOLDER
  value: "'stats'"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    body: Default folder(s) to find test scripts.
  name: DEFAULT_TESTPATH
  value: "['test']"
full_name: Syckle::Plugins::Stats
includes: []

instance_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: analyize
- !ruby/object:RDoc::RI::MethodSummary 
  name: gen_html
- !ruby/object:RDoc::RI::MethodSummary 
  name: gen_text
- !ruby/object:RDoc::RI::MethodSummary 
  name: generate_stats
- !ruby/object:RDoc::RI::MethodSummary 
  name: html_row2
- !ruby/object:RDoc::RI::MethodSummary 
  name: html_rowd
- !ruby/object:RDoc::RI::MethodSummary 
  name: html_rowh
- !ruby/object:RDoc::RI::MethodSummary 
  name: initialize_defaults
- !ruby/object:RDoc::RI::MethodSummary 
  name: line_count
- !ruby/object:RDoc::RI::MethodSummary 
  name: save_stats
- !ruby/object:RDoc::RI::MethodSummary 
  name: testfiles
name: Stats
superclass: Service
