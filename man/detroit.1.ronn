detroit(1) - a life-cycle build tool
====================================

## DESCRIPTION

Detroit is a software production management aid, aka a build tool. Detroit
utilizes a life-cycle methodology to help developers prepare and release
software in a clear, repeatable, linear fashion. While programmed in and
well suited to Ruby projects, Detroit can utilized for any build requirements.


## USAGE

To utilize Detroit add a `Toolchain` file to your project's root directory.
In this file add instantiation of tools, configured to your projects build
requirements. Toolchain files can be written in YAML or Ruby.

For example to generate RDoc's for a project, a tool might be defined:

    rdoc:
      tool: rdoc
      files:
        - lib
        - '[A-Z]*.*'
      main: README.md

See the online [User Guide](http://wiki.rubyworks.github.com/detroit) for
more details on creating toolchain files.

Once a toolchain file is in place, the `detroit` command line tool can be used
to invoke the tools. For example, to generate documentation:

    $ detroit document

This will run through all standard stations up to and including `document`.
Since the RDoc tool we configured above defines a document job, it would be
run in due course.


## OPTIONS

These are the available options for the `detroit` command line tool.

  * `-m`, `--multitask`
     Run work elements in parallel.

  * `-S`, `--skip=SERVICE`
     Skip a service.

  * `-s`, `--system=NAME`
     Select assembly system. Default is 'standard'.

  * `-t`, `--toolchain=FILE`
     Use specific toolchain file(s).

  * `-F`, `--force`
     Force operations.

  * `--trace`
     Run in TRACE mode.

  * `--trial`
     Run in TRIAL mode (no disk writes).

  * `--verbose`
     Provide extra output.

  * `-q`, `--quiet`
     Run silently.

  * `-I=PATH`
    Add directory to $LOAD_PATH

  * `--debug`
     Run with $DEBUG set to true.

  * `--warn`
     Run with $VERBOSE set to true.

  * `--help [TOOL]`
     Display this help message.

  * `-c`, `--config=TOOL`
     Produce a configuration template.


## RESOURCES

* [Homepage](http://rubyworks.github.com/detroit)
* [Development](http://github.com/rubyworks/detroit)
* [Mailing List](http://googlegroups.com/group/rubyworks-mailinglist)


## COPYRIGHT

Copyright (c) 2011 Rubyworks

Detroit is distributable in accordance with the terms of the GPL v3 license.

